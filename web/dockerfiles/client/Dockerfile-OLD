# base image
FROM node:16.9.1

ARG PROJECT=frontend
ENV PROJECT_DIR=/var/www/${PROJECT}
RUN mkdir -p ${PROJECT_DIR}
WORKDIR ${PROJECT_DIR}


# replace shell with bash so we can source files
RUN rm /bin/sh && ln -s /bin/bash /bin/sh && \
    apt update && apt-get update && \
    apt install apt-transport-https ca-certificates curl software-properties-common -y && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable" && \
    echo "deb https://apt.dockerproject.org/repo ubuntu-focal main" | tee /etc/apt/sources.list.d/docker.list && \
    apt update && apt-get update

# Get additional repositories for Ubuntu
ENV DEBIAN_FRONTEND=noninteractive

#RUN apt-get install tzdata -y
RUN apt-get install nano -y \
    iputils-ping -y \
    wget -y \
    curl -y \
    gnupg2 -y \
    software-properties-common -y \
    build-essential -y \
    libssl-dev -y \
    git -y \
    nodejs -y \
    gcc g++ make -y \
    nocache -y && \
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
    sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' && \
    apt-get update && apt-get install -yq google-chrome-stable
    # install chrome for protractor tests

# install chrome
#RUN mkdir /etc/apk && touch /etc/apk/repositories
#RUN apt install \
#    chromium@edge \
#    harfbuzz@edge \
#    nss@edge \
#    && rm -rf /var/cache/* \
#    && mkdir /var/cache/apt

RUN mkdir -p /usr/src/app

# set working directory
WORKDIR /usr/src/app

# add `/usr/src/app/node_modules/.bin` to $PATH
ENV PATH /usr/src/app/node_modules/.bin:$PATH

# install app dependencies
#WORKDIR $PROJECT_DIR/educationMain
#RUN cp $PROJECT_DIR/educationMain/package.json /usr/src/app/package.json
#COPY ~/education/frontend/educationMain/package-lock.json /usr/src/app/package-lock.json



# copy the client directory into the container
COPY . /usr/src/app

RUN npm install i -g @angular/cli@12.2.5

WORKDIR $PROJECT_DIR/educationMain


#RUN ng update @angular/cli @angular/core --allow-dirty --force && \
RUN npm i -g react-popper @popperjs/core && \
    npm i -g uuid@8.3.2 && \
    npm i -g @angular-devkit/build-angular@12.2.5

RUN npm uninstall typescript && \
    npm install typescript@4.3.2 && \
    npm i rxjs@6.6.7 && \
    npm i @ngrx/store@12.4.0  && \
    npm i @ngrx/effects@12.4.0  && \
    npm i @ngrx/entity && \
    npm i @ngrx/store-devtools@12.4.0  && \
    npm i @ngrx/router-store@12.4.0  && \
    npm i bootstrap@5.1.1  && \
    npm i ngx-bootstrap-icons@1.5.3  && \
    npm i jquery@3.6.0  && \
    npm i bootswatch@4.5.2  && \
    npm i faker @types/faker --save-dev && \
    npm i @ngrx/schematics --save-dev

WORKDIR $PROJECT_DIR

# Run the entrypoint script
COPY entrypoint-frontend.sh /sbin/entrypoint-frontend.sh
RUN chmod 755 /sbin/entrypoint-frontend.sh
