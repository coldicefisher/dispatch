{"version":3,"file":"ngx-moment.mjs","sources":["../../../src/add.pipe.ts","../../../src/calendar.pipe.ts","../../../src/date-format.pipe.ts","../../../src/difference.pipe.ts","../../../src/moment-options.ts","../../../src/duration.pipe.ts","../../../src/from-unix.pipe.ts","../../../src/parse.pipe.ts","../../../src/from-utc.pipe.ts","../../../src/is-after.pipe.ts","../../../src/is-before.pipe.ts","../../../src/local.pipe.ts","../../../src/locale.pipe.ts","../../../src/parse-zone.pipe.ts","../../../src/subtract.pipe.ts","../../../src/time-ago.pipe.ts","../../../src/utc.pipe.ts","../../../src/moment.module.ts","../../../src/ngx-moment.ts"],"sourcesContent":["/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amAdd' })\nexport class AddPipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    amount: moment.DurationInputArg1,\n    unit?: moment.DurationInputArg2,\n  ): any {\n    if (\n      typeof amount === 'undefined' ||\n      (typeof amount === 'number' && typeof unit === 'undefined')\n    ) {\n      throw new Error('AddPipe: missing required arguments');\n    }\n    return moment(value).add(amount, unit);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport {\n  Pipe,\n  ChangeDetectorRef,\n  PipeTransform,\n  EventEmitter,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport moment from 'moment';\nimport { Subscription } from 'rxjs';\n\n@Pipe({ name: 'amCalendar', pure: false })\nexport class CalendarPipe implements PipeTransform, OnDestroy {\n  /**\n   * Internal reference counter, so we can clean up when no instances are in use\n   */\n  private static refs = 0;\n\n  private static timer: number | null = null;\n  private static midnight: EventEmitter<Date> | null = null;\n\n  private midnightSub: Subscription;\n\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\n    // using a single static timer for all instances of this pipe for performance reasons\n    CalendarPipe.initTimer(ngZone);\n\n    CalendarPipe.refs++;\n\n    // values such as Today will need to be replaced with Yesterday after midnight,\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\n    this.midnightSub = CalendarPipe.midnight.subscribe(() => {\n      this.ngZone.run(() => this.cdRef.markForCheck());\n    });\n  }\n\n  transform(value: moment.MomentInput, ...args: any[]): any {\n    let formats: any = null;\n    let referenceTime: any = null;\n\n    for (let i = 0, len = args.length; i < len; i++) {\n      if (args[i] !== null) {\n        if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\n          formats = args[i];\n        } else {\n          referenceTime = moment(args[i]);\n        }\n      }\n    }\n\n    return moment(value).calendar(referenceTime, formats);\n  }\n\n  ngOnDestroy(): void {\n    if (CalendarPipe.refs > 0) {\n      CalendarPipe.refs--;\n    }\n\n    if (CalendarPipe.refs === 0) {\n      CalendarPipe.removeTimer();\n    }\n\n    this.midnightSub.unsubscribe();\n  }\n\n  private static initTimer(ngZone: NgZone) {\n    // initialize the timer\n    if (!CalendarPipe.midnight) {\n      CalendarPipe.midnight = new EventEmitter<Date>();\n      if (typeof window !== 'undefined') {\n        const timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\n        CalendarPipe.timer = ngZone.runOutsideAngular(() => {\n          return window.setTimeout(() => {\n            // emit the current date\n            CalendarPipe.midnight.emit(new Date());\n\n            // refresh the timer\n            CalendarPipe.removeTimer();\n            CalendarPipe.initTimer(ngZone);\n          }, timeToUpdate);\n        });\n      }\n    }\n  }\n\n  private static removeTimer() {\n    if (CalendarPipe.timer) {\n      window.clearTimeout(CalendarPipe.timer);\n      CalendarPipe.timer = null;\n      CalendarPipe.midnight = null;\n    }\n  }\n\n  private static _getMillisecondsUntilUpdate() {\n    const now = moment();\n    const tomorrow = moment().startOf('day').add(1, 'days');\n    const timeToMidnight = tomorrow.valueOf() - now.valueOf();\n    return timeToMidnight + 1000; // 1 second after midnight\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amDateFormat' })\nexport class DateFormatPipe implements PipeTransform {\n  transform(value: moment.MomentInput, ...args: any[]): string {\n    if (!value) {\n      return '';\n    }\n    return moment(value).format(args[0]);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amDifference' })\nexport class DifferencePipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    otherValue: moment.MomentInput,\n    unit?: moment.unitOfTime.Diff,\n    precision?: boolean,\n  ): number {\n    const date = moment(value);\n    const date2 = otherValue !== null ? moment(otherValue) : moment();\n\n    return date.diff(date2, unit, precision);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NGX_MOMENT_OPTIONS: InjectionToken<NgxMomentOptions> = new InjectionToken<\n  NgxMomentOptions\n>('NGX_MOMENT_OPTIONS');\n\nexport interface NgxMomentOptions {\n  /**\n   * relativeTimeThresholdOptions\n   * @description Provides the `relativeTimeThreshold` units allowing a pipe to set the `moment.relativeTimeThreshold` values.\n   * The `key` is a unit defined as one of `ss`, `s`, `m`, `h`, `d`, `M`.\n   * @see https://momentjs.com/docs/#/customization/relative-time-threshold/\n   * @example by default more than 45 seconds is considered a minute, more than 22 hours is considered a day and so on.\n   * So settings the unit 'm' to `59` will adjust the `relativeTimeThreshold` and consider more than 59 minutes\n   * to be an hour (default is `45 minutes`)\n   */\n  relativeTimeThresholdOptions: { [key: string]: number };\n}\n","import moment from 'moment';\n\nimport { Inject, Optional, Pipe, PipeTransform } from '@angular/core';\nimport { NGX_MOMENT_OPTIONS, NgxMomentOptions } from './moment-options';\n\n@Pipe({ name: 'amDuration' })\nexport class DurationPipe implements PipeTransform {\n  allowedUnits: Array<string> = ['ss', 's', 'm', 'h', 'd', 'M'];\n\n  constructor(@Optional() @Inject(NGX_MOMENT_OPTIONS) momentOptions?: NgxMomentOptions) {\n    this._applyOptions(momentOptions);\n  }\n\n  transform(value: moment.DurationInputArg1, ...args: string[]): string {\n    if (typeof args === 'undefined' || args.length !== 1) {\n      throw new Error('DurationPipe: missing required time unit argument');\n    }\n    return moment.duration(value, args[0] as moment.unitOfTime.DurationConstructor).humanize();\n  }\n\n  private _applyOptions(momentOptions: NgxMomentOptions): void {\n    if (!momentOptions) {\n      return;\n    }\n\n    if (!!momentOptions.relativeTimeThresholdOptions) {\n      const units: Array<string> = Object.keys(momentOptions.relativeTimeThresholdOptions);\n      const filteredUnits: Array<string> = units.filter(\n        (unit) => this.allowedUnits.indexOf(unit) !== -1,\n      );\n      filteredUnits.forEach((unit) => {\n        moment.relativeTimeThreshold(unit, momentOptions.relativeTimeThresholdOptions[unit]);\n      });\n    }\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amFromUnix' })\nexport class FromUnixPipe implements PipeTransform {\n  transform(value: number | string, ...args: string[]): any {\n    return typeof value === 'string' ? moment.unix(parseInt(value, 10)) : moment.unix(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amParse' })\nexport class ParsePipe implements PipeTransform {\n  transform(value: moment.MomentInput, formats: string | string[]): moment.Moment {\n    return moment(value, formats);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amFromUtc' })\nexport class FromUtcPipe implements PipeTransform {\n  transform(value: moment.MomentInput, formats?: string | string[], ...args: string[]): any {\n    return formats ? moment.utc(value, formats) : moment.utc(value);\n  }\n}\n","import moment from 'moment';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'amIsAfter',\n})\nexport class IsAfterPipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    otherValue: moment.MomentInput,\n    unit?: moment.unitOfTime.StartOf,\n  ): boolean {\n    return moment(value).isAfter(moment(otherValue), unit);\n  }\n}\n","import moment from 'moment';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'amIsBefore',\n})\nexport class IsBeforePipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    otherValue: moment.MomentInput,\n    unit?: moment.unitOfTime.StartOf,\n  ): boolean {\n    return moment(value).isBefore(moment(otherValue), unit);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amLocal' })\nexport class LocalTimePipe implements PipeTransform {\n  transform(value: moment.MomentInput): moment.Moment {\n    return moment(value).local();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amLocale' })\nexport class LocalePipe implements PipeTransform {\n  transform(value: moment.MomentInput, locale: string): moment.Moment {\n    return moment(value).locale(locale);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amParseZone' })\nexport class ParseZonePipe implements PipeTransform {\n  transform(value: moment.MomentInput): moment.Moment {\n    return moment.parseZone(value);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amSubtract' })\nexport class SubtractPipe implements PipeTransform {\n  transform(\n    value: moment.MomentInput,\n    amount: moment.DurationInputArg1,\n    unit?: moment.DurationInputArg2,\n  ): any {\n    if (\n      typeof amount === 'undefined' ||\n      (typeof amount === 'number' && typeof unit === 'undefined')\n    ) {\n      throw new Error('SubtractPipe: missing required arguments');\n    }\n    return moment(value).subtract(amount, unit);\n  }\n}\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport { Pipe, ChangeDetectorRef, PipeTransform, OnDestroy, NgZone } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amTimeAgo', pure: false })\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\n  private currentTimer: number | null;\n\n  private lastTime: Number;\n  private lastValue: moment.MomentInput;\n  private lastOmitSuffix: boolean;\n  private lastLocale?: string;\n  private lastText: string;\n  private formatFn: (m: moment.Moment) => string;\n\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {}\n\n  format(m: moment.Moment) {\n    return m.from(moment(), this.lastOmitSuffix);\n  }\n\n  transform(\n    value: moment.MomentInput,\n    omitSuffix?: boolean,\n    formatFn?: (m: moment.Moment) => string,\n  ): string {\n    if (this.hasChanged(value, omitSuffix)) {\n      this.lastTime = this.getTime(value);\n      this.lastValue = value;\n      this.lastOmitSuffix = omitSuffix;\n      this.lastLocale = this.getLocale(value);\n      this.formatFn = formatFn || this.format.bind(this);\n      this.removeTimer();\n      this.createTimer();\n      this.lastText = this.formatFn(moment(value));\n    } else {\n      this.createTimer();\n    }\n\n    return this.lastText;\n  }\n\n  ngOnDestroy(): void {\n    this.removeTimer();\n  }\n\n  private createTimer() {\n    if (this.currentTimer) {\n      return;\n    }\n\n    const momentInstance = moment(this.lastValue);\n    const timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\n\n    this.currentTimer = this.ngZone.runOutsideAngular(() => {\n      if (typeof window !== 'undefined') {\n        return window.setTimeout(() => {\n          this.lastText = this.formatFn(moment(this.lastValue));\n\n          this.currentTimer = null;\n          this.ngZone.run(() => this.cdRef.markForCheck());\n        }, timeToUpdate);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  private removeTimer() {\n    if (this.currentTimer) {\n      window.clearTimeout(this.currentTimer);\n      this.currentTimer = null;\n    }\n  }\n\n  private getSecondsUntilUpdate(momentInstance: moment.Moment) {\n    const howOld = Math.abs(moment().diff(momentInstance, 'minute'));\n    if (howOld < 1) {\n      return 1;\n    } else if (howOld < 60) {\n      return 30;\n    } else if (howOld < 180) {\n      return 300;\n    } else {\n      return 3600;\n    }\n  }\n\n  private hasChanged(value: moment.MomentInput, omitSuffix?: boolean): boolean {\n    return (\n      this.getTime(value) !== this.lastTime ||\n      this.getLocale(value) !== this.lastLocale ||\n      omitSuffix !== this.lastOmitSuffix\n    );\n  }\n\n  private getTime(value: moment.MomentInput): number {\n    if (moment.isDate(value)) {\n      return value.getTime();\n    } else if (moment.isMoment(value)) {\n      return value.valueOf();\n    } else {\n      return moment(value).valueOf();\n    }\n  }\n\n  private getLocale(value: moment.MomentInput): string | null {\n    return moment.isMoment(value) ? value.locale() : moment.locale();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment';\n\n@Pipe({ name: 'amUtc' })\nexport class UtcPipe implements PipeTransform {\n  transform(value: moment.MomentInput): moment.Moment {\n    return moment(value).utc();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NGX_MOMENT_OPTIONS, NgxMomentOptions } from './moment-options';\n\nimport { AddPipe } from './add.pipe';\nimport { CalendarPipe } from './calendar.pipe';\nimport { DateFormatPipe } from './date-format.pipe';\nimport { DifferencePipe } from './difference.pipe';\nimport { DurationPipe } from './duration.pipe';\nimport { FromUnixPipe } from './from-unix.pipe';\nimport { FromUtcPipe } from './from-utc.pipe';\nimport { IsAfterPipe } from './is-after.pipe';\nimport { IsBeforePipe } from './is-before.pipe';\nimport { LocalTimePipe } from './local.pipe';\nimport { LocalePipe } from './locale.pipe';\nimport { ParsePipe } from './parse.pipe';\nimport { ParseZonePipe } from './parse-zone.pipe';\nimport { SubtractPipe } from './subtract.pipe';\nimport { TimeAgoPipe } from './time-ago.pipe';\nimport { UtcPipe } from './utc.pipe';\n\nconst ANGULAR_MOMENT_PIPES = [\n  AddPipe,\n  CalendarPipe,\n  DateFormatPipe,\n  DifferencePipe,\n  DurationPipe,\n  FromUnixPipe,\n  ParsePipe,\n  SubtractPipe,\n  TimeAgoPipe,\n  UtcPipe,\n  FromUtcPipe,\n  LocalTimePipe,\n  LocalePipe,\n  ParseZonePipe,\n  IsBeforePipe,\n  IsAfterPipe,\n];\n\n@NgModule({\n  declarations: ANGULAR_MOMENT_PIPES,\n  exports: ANGULAR_MOMENT_PIPES,\n})\nexport class MomentModule {\n  static forRoot(options?: NgxMomentOptions): ModuleWithProviders<MomentModule> {\n    return {\n      ngModule: MomentModule,\n      providers: [\n        {\n          provide: NGX_MOMENT_OPTIONS,\n          useValue: {\n            ...options,\n          },\n        },\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}