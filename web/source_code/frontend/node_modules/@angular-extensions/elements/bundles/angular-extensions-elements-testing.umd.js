(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@angular-extensions/elements/testing', ['exports', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['angular-extensions'] = global['angular-extensions'] || {}, global['angular-extensions'].elements = global['angular-extensions'].elements || {}, global['angular-extensions'].elements.testing = {}), global.ng.core));
}(this, (function (exports, i0) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var LazyElementTestingDirective = /** @class */ (function () {
        function LazyElementTestingDirective(vcr, template) {
            this.vcr = vcr;
            this.template = template;
        }
        LazyElementTestingDirective.prototype.ngOnInit = function () {
            this.vcr.createEmbeddedView(this.template);
        };
        return LazyElementTestingDirective;
    }());
    LazyElementTestingDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.1.0", ngImport: i0__namespace, type: LazyElementTestingDirective, deps: [{ token: i0__namespace.ViewContainerRef }, { token: i0__namespace.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    LazyElementTestingDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.1.0", type: LazyElementTestingDirective, selector: "[axLazyElement]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.1.0", ngImport: i0__namespace, type: LazyElementTestingDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[axLazyElement]',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ViewContainerRef }, { type: i0__namespace.TemplateRef }]; } });

    var LazyElementDynamicTestingDirective = /** @class */ (function () {
        function LazyElementDynamicTestingDirective(vcr, template) {
            this.vcr = vcr;
            this.template = template;
        }
        LazyElementDynamicTestingDirective.prototype.ngOnInit = function () {
            this.vcr.createEmbeddedView(this.template);
        };
        return LazyElementDynamicTestingDirective;
    }());
    LazyElementDynamicTestingDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.1.0", ngImport: i0__namespace, type: LazyElementDynamicTestingDirective, deps: [{ token: i0__namespace.ViewContainerRef }, { token: i0__namespace.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    LazyElementDynamicTestingDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.1.0", type: LazyElementDynamicTestingDirective, selector: "[axLazyElementDynamic]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.1.0", ngImport: i0__namespace, type: LazyElementDynamicTestingDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[axLazyElementDynamic]',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ViewContainerRef }, { type: i0__namespace.TemplateRef }]; } });

    var LazyElementsTestingModule = /** @class */ (function () {
        function LazyElementsTestingModule() {
        }
        return LazyElementsTestingModule;
    }());
    LazyElementsTestingModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.1.0", ngImport: i0__namespace, type: LazyElementsTestingModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    LazyElementsTestingModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.1.0", ngImport: i0__namespace, type: LazyElementsTestingModule, declarations: [LazyElementTestingDirective,
            LazyElementDynamicTestingDirective], exports: [LazyElementTestingDirective, LazyElementDynamicTestingDirective] });
    LazyElementsTestingModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.1.0", ngImport: i0__namespace, type: LazyElementsTestingModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.1.0", ngImport: i0__namespace, type: LazyElementsTestingModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [
                            LazyElementTestingDirective,
                            LazyElementDynamicTestingDirective,
                        ],
                        exports: [LazyElementTestingDirective, LazyElementDynamicTestingDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.LazyElementDynamicTestingDirective = LazyElementDynamicTestingDirective;
    exports.LazyElementTestingDirective = LazyElementTestingDirective;
    exports.LazyElementsTestingModule = LazyElementsTestingModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-extensions-elements-testing.umd.js.map
