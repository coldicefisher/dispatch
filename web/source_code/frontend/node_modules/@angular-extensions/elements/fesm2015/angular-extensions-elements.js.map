{"version":3,"file":"angular-extensions-elements.js","sources":["../../../projects/elements/src/lib/lazy-elements/lazy-elements.tokens.ts","../../../projects/elements/src/lib/lazy-elements/lazy-elements-loader.service.ts","../../../projects/elements/src/lib/lazy-elements/lazy-element/lazy-element.directive.ts","../../../projects/elements/src/lib/lazy-elements/lazy-element-dynamic/lazy-element-dynamic.directive.ts","../../../projects/elements/src/lib/lazy-elements/lazy-elements.module.ts","../../../projects/elements/src/public-api.ts","../../../projects/elements/src/angular-extensions-elements.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { ElementConfig } from './lazy-elements-loader.service';\nimport { LazyElementRootOptions } from './lazy-elements.module';\n\nexport const LAZY_ELEMENT_CONFIGS = new InjectionToken<ElementConfig[]>(\n  'LAZY_ELEMENT_CONFIGS'\n);\n\nexport const LAZY_ELEMENT_ROOT_OPTIONS =\n  new InjectionToken<LazyElementRootOptions>('LAZY_ELEMENT_ROOT_OPTIONS');\n\nexport const LAZY_ELEMENT_ROOT_GUARD = new InjectionToken<void>(\n  'LAZY_ELEMENT_ROOT_GUARD'\n);\n\nexport const LAZY_ELEMENTS_REGISTRY = new InjectionToken<LazyElementsRegistry>(\n  'LAZY_ELEMENTS_REGISTRY',\n  {\n    providedIn: 'root',\n    factory: () => new Map<string, Promise<void>>(),\n  }\n);\n\nexport interface LazyElementsRegistry extends Map<string, Promise<void>> {\n  get: (url: string) => Promise<void> | undefined;\n  set: (url: string, notifier: Promise<void>) => this;\n  has: (url: string) => boolean;\n}\n","import {\n  ErrorHandler,\n  Inject,\n  Injectable,\n  Optional,\n  Type,\n} from '@angular/core';\n\nimport { LazyElementRootOptions } from './lazy-elements.module';\nimport {\n  LAZY_ELEMENT_ROOT_OPTIONS,\n  LAZY_ELEMENTS_REGISTRY,\n  LazyElementsRegistry,\n} from './lazy-elements.tokens';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\nexport type Hook = (tag: string) => Promise<void> | void;\n\nexport interface HooksConfig {\n  beforeLoad?: Hook;\n  afterLoad?: Hook;\n}\n\nexport interface ElementConfig {\n  tag: string;\n  url: string;\n  isModule?: boolean;\n  importMap?: boolean;\n  loadingComponent?: Type<any>;\n  errorComponent?: Type<any>;\n  preload?: boolean;\n  hooks?: HooksConfig;\n  isAdded?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyElementsLoaderService {\n  configs: ElementConfig[] = [];\n\n  constructor(\n    private errorHandler: ErrorHandler,\n    @Inject(LAZY_ELEMENTS_REGISTRY) private registry: LazyElementsRegistry,\n    @Optional()\n    @Inject(LAZY_ELEMENT_ROOT_OPTIONS)\n    public options: LazyElementRootOptions\n  ) {\n    if (!options) {\n      this.options = {};\n    }\n  }\n\n  addConfigs(newConfigs: ElementConfig[]) {\n    newConfigs.forEach((newConfig) => {\n      const existingConfig = this.getElementConfig(newConfig.tag);\n      if (existingConfig) {\n        ngDevMode &&\n          console.warn(\n            `${LOG_PREFIX} - ElementConfig for tag '${newConfig.tag}' was previously added, it will not be added multiple times, continue...`\n          );\n      } else {\n        newConfig.isAdded = true;\n        this.configs.push(newConfig);\n        const shouldPreload =\n          newConfig.preload !== undefined\n            ? newConfig.preload\n            : this.options.preload;\n        if (shouldPreload) {\n          this.loadElement(\n            newConfig.url,\n            newConfig.tag,\n            newConfig.isModule,\n            newConfig.importMap,\n            newConfig.hooks\n          );\n        }\n      }\n    });\n  }\n\n  getElementConfig(tag: string): ElementConfig | undefined {\n    return this.configs.find((config) => config.tag === tag);\n  }\n\n  preload(tags?: string[]) {\n    let configs = this.configs;\n    if (tags) {\n      configs = this.configs.filter((config) => tags.includes(config.tag));\n    }\n    configs.forEach((config) =>\n      this.loadElement(\n        config.url,\n        config.tag,\n        config.isModule,\n        config.importMap,\n        config.hooks\n      )\n    );\n  }\n\n  async loadElement(\n    url: string | null,\n    tag: string,\n    isModule?: boolean,\n    importMap?: boolean,\n    hooksConfig?: HooksConfig\n  ): Promise<void> {\n    const config = this.getElementConfig(tag);\n    isModule ??= config?.isModule ?? this.options.isModule;\n    importMap ??= config?.importMap ?? this.options.importMap;\n\n    if (ngDevMode && !tag) {\n      throw new Error(\n        `${LOG_PREFIX} - tag for '${url}' not found, the *axLazyElement has to be used on HTML element`\n      );\n    }\n\n    if (!url) {\n      if (ngDevMode && !config?.url && !importMap) {\n        throw new Error(`${LOG_PREFIX} - url for <${tag}> not found`);\n      } else if (importMap) {\n        url = tag;\n      } else {\n        url = config!.url;\n      }\n    }\n\n    if (!this.hasElement(url)) {\n      const notifier = this.addElement(url);\n\n      const beforeLoadHook =\n        hooksConfig?.beforeLoad ??\n        config?.hooks?.beforeLoad ??\n        this.options?.hooks?.beforeLoad;\n      const afterLoadHook =\n        hooksConfig?.afterLoad ??\n        config?.hooks?.afterLoad ??\n        this.options?.hooks?.afterLoad;\n\n      if (importMap) {\n        url = await this.resolveImportMap(url);\n      }\n\n      const script = document.createElement('script') as HTMLScriptElement;\n      if (isModule) {\n        script.type = 'module';\n      }\n      script.src = url;\n      const onLoad = () => {\n        if (afterLoadHook) {\n          this.handleHook(afterLoadHook, tag)\n            .then(notifier.resolve)\n            .catch(notifier.reject);\n        } else {\n          notifier.resolve();\n        }\n\n        cleanup();\n      };\n      const onError = (error: ErrorEvent) => {\n        notifier.reject(error);\n        cleanup();\n        // Caretaker note: don't put it before the `reject` and `cleanup` since the user may have some\n        // custom error handler that will re-throw the error through `throw error`. Hence the code won't\n        // be executed, and the promise won't be rejected.\n        this.errorHandler.handleError(error);\n      };\n      // The `load` and `error` event listeners capture `this`. That's why they have to be removed manually.\n      // Otherwise, the `LazyElementsLoaderService` is not going to be GC'd.\n      function cleanup() {\n        script.removeEventListener('load', onLoad);\n        script.removeEventListener('error', onError);\n      }\n      script.addEventListener('load', onLoad);\n      script.addEventListener('error', onError);\n      if (beforeLoadHook) {\n        this.handleHook(beforeLoadHook, tag)\n          .then(() => document.body.appendChild(script))\n          .catch(notifier.reject);\n      } else {\n        document.body.appendChild(script);\n      }\n    }\n    return this.registry.get(this.stripUrlProtocol(url));\n  }\n\n  private addElement(url: string): Notifier {\n    let notifier: Notifier;\n    this.registry.set(\n      this.stripUrlProtocol(url),\n      new Promise<void>((resolve, reject) => (notifier = { resolve, reject }))\n    );\n    return notifier!;\n  }\n\n  private hasElement(url: string): boolean {\n    return this.registry.has(this.stripUrlProtocol(url));\n  }\n\n  private stripUrlProtocol(url: string): string {\n    return url.replace(/https?:\\/\\//, '');\n  }\n\n  private handleHook(hook: Hook, tag: string): Promise<void> {\n    try {\n      return Promise.resolve(hook(tag));\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  private async resolveImportMap(url: string) {\n    const System = (window as any).System;\n    if (System) {\n      await System.prepareImport();\n      url = System.resolve(url);\n    } else if (ngDevMode) {\n      throw new Error(\n        `${LOG_PREFIX} - importMap feature depends on SystemJS library to be globally loaded but none was found, thus '${url}' can't be resolved. You should either load SystemJS or remove the importMap flag.`\n      );\n    }\n    return url;\n  }\n}\n\ninterface Notifier {\n  resolve: () => void;\n  reject: (error: any) => void;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {\n  animationFrameScheduler,\n  BehaviorSubject,\n  EMPTY,\n  from,\n  Subscription,\n} from 'rxjs';\nimport { catchError, debounceTime, mergeMap, switchMap } from 'rxjs/operators';\n\nimport {\n  ElementConfig,\n  LazyElementsLoaderService,\n} from '../lazy-elements-loader.service';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\n@Directive({\n  selector: '[axLazyElement]',\n})\nexport class LazyElementDirective implements OnChanges, OnInit, OnDestroy {\n  @Input('axLazyElement') url: string | null = null;\n  @Input('axLazyElementLoadingTemplate') // eslint-disable-line @angular-eslint/no-input-rename\n  loadingTemplateRef: TemplateRef<any> | null = null;\n  @Input('axLazyElementErrorTemplate') // eslint-disable-line @angular-eslint/no-input-rename\n  errorTemplateRef: TemplateRef<any> | null = null;\n  @Input('axLazyElementModule') isModule = false; // eslint-disable-line @angular-eslint/no-input-rename\n  @Input('axLazyElementImportMap') importMap = false; // eslint-disable-line @angular-eslint/no-input-rename\n\n  private viewRef: EmbeddedViewRef<any> | null = null;\n  private subscription = Subscription.EMPTY;\n  private url$ = new BehaviorSubject<string | null>(null);\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: string,\n    private vcr: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private elementsLoaderService: LazyElementsLoaderService,\n    private cfr: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.url) {\n      this.url$.next(this.url);\n    }\n  }\n\n  ngOnInit() {\n    // There's no sense to execute the below logic on the Node.js side since the JavaScript\n    // will not be loaded on the server-side (Angular will only append the script to body).\n    // The `loadElement` promise will never be resolved, since it gets resolved when the `load` event is emitted.\n    // `customElements` are also undefined on the Node.js side; thus, it will always render the error template.\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.setupUrlListener();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  destroyEmbeddedView() {\n    if (this.viewRef && !this.viewRef.destroyed) {\n      this.viewRef.detach();\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n\n  private setupUrlListener(): void {\n    const tpl = this.template as any;\n    const elementTag = tpl._declarationTContainer\n      ? tpl._declarationTContainer.tagName || tpl._declarationTContainer.value\n      : tpl._def.element.template.nodes[0].element.name;\n\n    const elementConfig =\n      this.elementsLoaderService.getElementConfig(elementTag) ||\n      ({} as ElementConfig);\n    const options = this.elementsLoaderService.options;\n    const loadingComponent =\n      elementConfig.loadingComponent || options.loadingComponent;\n\n    this.subscription = this.url$\n      .pipe(\n        // This is used to coalesce changes since the `url$` subject might emit multiple values initially, e.g.\n        // `null` (initial value) and the url itself (when the `url` binding is provided).\n        // The `animationFrameScheduler` is used to prevent the frame drop.\n        debounceTime(0, animationFrameScheduler),\n        switchMap((url) => {\n          if (this.loadingTemplateRef) {\n            this.vcr.createEmbeddedView(this.loadingTemplateRef);\n          } else if (loadingComponent) {\n            const factory = this.cfr.resolveComponentFactory(loadingComponent);\n            this.vcr.createComponent(factory);\n          }\n\n          return from(\n            this.elementsLoaderService.loadElement(\n              url,\n              elementTag,\n              this.isModule,\n              this.importMap,\n              elementConfig?.hooks\n            )\n          ).pipe(\n            catchError(() => {\n              this.vcr.clear();\n              const errorComponent =\n                elementConfig.errorComponent || options.errorComponent;\n              if (this.errorTemplateRef) {\n                this.vcr.createEmbeddedView(this.errorTemplateRef);\n                this.cdr.markForCheck();\n              } else if (errorComponent) {\n                const factory =\n                  this.cfr.resolveComponentFactory(errorComponent);\n                this.vcr.createComponent(factory);\n                this.cdr.markForCheck();\n              } else if (ngDevMode) {\n                console.error(\n                  `${LOG_PREFIX} - Loading of element <${elementTag}> failed, please provide <ng-template #error>Loading failed...</ng-template> and reference it in *axLazyElement=\"errorTemplate: error\" to display customized error message in place of element`\n                );\n              }\n              return EMPTY;\n            })\n          );\n        }),\n        mergeMap(() => customElements.whenDefined(elementTag))\n      )\n      .subscribe({\n        next: () => {\n          this.vcr.clear();\n          this.viewRef = this.vcr.createEmbeddedView(this.template);\n          this.cdr.markForCheck();\n        },\n      });\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { DOCUMENT, isPlatformServer } from '@angular/common';\nimport { from, Subscription } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport {\n  ElementConfig,\n  LazyElementsLoaderService,\n} from '../lazy-elements-loader.service';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\n@Directive({\n  selector: '[axLazyElementDynamic]',\n})\nexport class LazyElementDynamicDirective implements OnInit, OnDestroy {\n  @Input('axLazyElementDynamic') tag: string | null = null;\n  @Input('axLazyElementDynamicUrl') url: string | null = null; // eslint-disable-line @angular-eslint/no-input-rename\n  @Input('axLazyElementDynamicLoadingTemplate') // eslint-disable-line @angular-eslint/no-input-rename\n  loadingTemplateRef: TemplateRef<any> | null = null;\n  @Input('axLazyElementDynamicErrorTemplate') // eslint-disable-line @angular-eslint/no-input-rename\n  errorTemplateRef: TemplateRef<any> | null = null;\n  @Input('axLazyElementDynamicModule') isModule = false; // eslint-disable-line @angular-eslint/no-input-rename\n  @Input('axLazyElementDynamicImportMap') importMap = false; // eslint-disable-line @angular-eslint/no-input-rename\n\n  private viewRef: EmbeddedViewRef<any> | null = null;\n  private subscription = Subscription.EMPTY;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: string,\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private vcr: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private template: TemplateRef<any>,\n    private elementsLoaderService: LazyElementsLoaderService\n  ) {}\n\n  ngOnInit() {\n    // There's no sense to execute the below logic on the Node.js side since the JavaScript\n    // will not be loaded on the server-side (Angular will only append the script to body).\n    // The `loadElement` promise will never be resolved, since it gets resolved when the `load` event is emitted.\n    // `customElements` are also undefined on the Node.js side; thus, it will always render the error template.\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    if (ngDevMode) {\n      if (!this.tag || this.tag.length === 0 || !this.tag.includes('-')) {\n        throw new Error(\n          `${LOG_PREFIX} - Valid tag has to be specified when using *axLazyElementDynamic directive (use *axLazyElementDynamic=\"'some-tag'\"), got: \"${this.tag}\"`\n        );\n      }\n    }\n\n    const tag = this.tag!;\n\n    const elementConfig =\n      this.elementsLoaderService.getElementConfig(tag) || ({} as ElementConfig);\n    const options = this.elementsLoaderService.options;\n    const loadingComponent =\n      elementConfig.loadingComponent || options.loadingComponent;\n\n    if (this.loadingTemplateRef) {\n      this.vcr.createEmbeddedView(this.loadingTemplateRef);\n    } else if (loadingComponent) {\n      const factory = this.cfr.resolveComponentFactory(loadingComponent);\n      this.vcr.createComponent(factory);\n    }\n\n    const loadElement$ = from(\n      this.elementsLoaderService.loadElement(\n        this.url,\n        tag,\n        this.isModule,\n        this.importMap,\n        elementConfig?.hooks\n      )\n    );\n\n    this.subscription = loadElement$\n      .pipe(mergeMap(() => customElements.whenDefined(tag)))\n      .subscribe({\n        next: () => {\n          this.vcr.clear();\n          const originalCreateElement = this.renderer.createElement;\n          this.renderer.createElement = (name: string, namespace: string) => {\n            if (name === 'ax-lazy-element') {\n              name = tag;\n            }\n            return this.document.createElement(name);\n          };\n          this.viewRef = this.vcr.createEmbeddedView(this.template);\n          this.renderer.createElement = originalCreateElement;\n          this.cdr.markForCheck();\n        },\n        error: (error) => {\n          const errorComponent =\n            elementConfig.errorComponent || options.errorComponent;\n          this.vcr.clear();\n          if (this.errorTemplateRef) {\n            this.vcr.createEmbeddedView(this.errorTemplateRef);\n            this.cdr.markForCheck();\n          } else if (errorComponent) {\n            const factory = this.cfr.resolveComponentFactory(errorComponent);\n            this.vcr.createComponent(factory);\n            this.cdr.markForCheck();\n          } else if (ngDevMode) {\n            console.error(\n              `${LOG_PREFIX} - Loading of element <${this.tag}> failed, please provide <ng-template #error>Loading failed...</ng-template> and reference it in *axLazyElementDynamic=\"errorTemplate: error\" to display customized error message in place of element\\n\\n`,\n              error\n            );\n          }\n        },\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  destroyEmbeddedView() {\n    if (this.viewRef && !this.viewRef.destroyed) {\n      this.viewRef.detach();\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n}\n","import {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n  Type,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LazyElementDirective } from './lazy-element/lazy-element.directive';\nimport { LazyElementDynamicDirective } from './lazy-element-dynamic/lazy-element-dynamic.directive';\nimport {\n  ElementConfig,\n  HooksConfig,\n  LazyElementsLoaderService,\n} from './lazy-elements-loader.service';\nimport {\n  LAZY_ELEMENT_CONFIGS,\n  LAZY_ELEMENT_ROOT_GUARD,\n  LAZY_ELEMENT_ROOT_OPTIONS,\n} from './lazy-elements.tokens';\n\nimport './ng-dev-mode';\n\nexport function createLazyElementRootGuard(\n  rootOptions: LazyElementRootOptions\n) {\n  if (ngDevMode && rootOptions) {\n    throw new TypeError(\n      `LazyElementsModule.forRoot() called twice. Feature modules should use LazyElementsModule.forFeature() instead.`\n    );\n  }\n  return 'LazyElementsModule.forRoot() multiple execution guard';\n}\n\n@NgModule({\n  declarations: [LazyElementDirective, LazyElementDynamicDirective],\n  imports: [CommonModule],\n  exports: [LazyElementDirective, LazyElementDynamicDirective],\n  providers: [],\n})\nexport class LazyElementsModule {\n  static forRoot(\n    options: LazyElementModuleRootOptions\n  ): ModuleWithProviders<LazyElementsModule> {\n    return {\n      ngModule: LazyElementsModule,\n      providers: [\n        {\n          provide: LAZY_ELEMENT_CONFIGS,\n          useValue:\n            options && options.elementConfigs ? options.elementConfigs : [],\n          multi: true,\n        },\n        {\n          provide: LAZY_ELEMENT_ROOT_OPTIONS,\n          useValue: options.rootOptions ? options.rootOptions : {},\n        },\n        {\n          provide: LAZY_ELEMENT_ROOT_GUARD,\n          useFactory: createLazyElementRootGuard,\n          deps: [[LAZY_ELEMENT_ROOT_OPTIONS, new Optional(), new SkipSelf()]],\n        },\n      ],\n    };\n  }\n\n  static forFeature(\n    options: LazyElementModuleOptions\n  ): ModuleWithProviders<LazyElementsModule> {\n    return {\n      ngModule: LazyElementsModule,\n      providers: [\n        {\n          provide: LAZY_ELEMENT_CONFIGS,\n          useValue:\n            options && options.elementConfigs ? options.elementConfigs : [],\n          multi: true,\n        },\n      ],\n    };\n  }\n\n  constructor(\n    lazyElementsLoaderService: LazyElementsLoaderService,\n    @Optional()\n    @Inject(LAZY_ELEMENT_CONFIGS)\n    elementConfigsMultiProvider: ElementConfig[][],\n    @Optional()\n    @Inject(LAZY_ELEMENT_ROOT_GUARD)\n    guard: any\n  ) {\n    if (elementConfigsMultiProvider && elementConfigsMultiProvider.length) {\n      elementConfigsMultiProvider\n        .filter((configs) => configs.some((config) => !config.isAdded))\n        .forEach((configs) => lazyElementsLoaderService.addConfigs(configs));\n    }\n  }\n}\n\nexport interface LazyElementModuleOptions {\n  elementConfigs?: ElementConfig[];\n}\n\nexport interface LazyElementModuleRootOptions {\n  elementConfigs?: ElementConfig[];\n  rootOptions?: LazyElementRootOptions;\n}\n\nexport interface LazyElementRootOptions {\n  loadingComponent?: Type<any>;\n  errorComponent?: Type<any>;\n  isModule?: boolean;\n  importMap?: boolean;\n  preload?: boolean;\n  hooks?: HooksConfig;\n}\n","/*\n * Public API Surface of elements\n */\n\nexport * from './lib/lazy-elements/lazy-elements.module';\nexport * from './lib/lazy-elements/lazy-elements.tokens';\nexport * from './lib/lazy-elements/lazy-elements-loader.service';\nexport * from './lib/lazy-elements/lazy-element/lazy-element.directive';\nexport * from './lib/lazy-elements/lazy-element-dynamic/lazy-element-dynamic.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["LOG_PREFIX"],"mappings":"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"}